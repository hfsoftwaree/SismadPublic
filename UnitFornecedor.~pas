unit UnitFornecedor;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Mask, DBCtrls, ExtCtrls, ComCtrls, ImgList, Buttons,
  Grids, DBGrids, DB, ADODB, EDBZero, EChkIE, EChkCNPJ, EKeyNav,
  IBCustomDataSet, IBTable, EChkCPF;

type
  TfrmFornecedores = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    EvCheckCNPJ1: TEvCheckCNPJ;
    EvCheckIE1: TEvCheckIE;
    Panel2: TPanel;
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    BitBtn3: TBitBtn;
    DBNavigator1: TDBNavigator;
    BitBtn4: TBitBtn;
    BitBtn5: TBitBtn;
    BitBtn6: TBitBtn;
    BitBtn7: TBitBtn;
    Image1: TImage;
    Panel1: TPanel;
    DBEdit13: TDBEdit;
    DBEdit12: TDBEdit;
    DBEdit9: TDBEdit;
    DBEdit2: TDBEdit;
    DBEdit1: TDBEdit;
    MaskEdit3: TMaskEdit;
    MaskEdit2: TMaskEdit;
    MaskEdit1: TMaskEdit;
    DBEdit16: TDBEdit;
    DBEdit15: TDBEdit;
    DBEdit8: TDBEdit;
    DBEdit5: TDBEdit;
    DBEdit3: TDBEdit;
    TabSheet3: TTabSheet;
    Panel3: TPanel;
    Panel17: TPanel;
    Panel4: TPanel;
    Panel6: TPanel;
    Panel7: TPanel;
    Panel8: TPanel;
    Panel9: TPanel;
    DBComboBox4: TDBComboBox;
    Panel13: TPanel;
    Panel5: TPanel;
    DBEdit6: TDBEdit;
    Panel15: TPanel;
    DBEdit14: TDBEdit;
    MaskEdit4: TMaskEdit;
    Panel16: TPanel;
    Panel18: TPanel;
    Panel19: TPanel;
    Panel20: TPanel;
    Panel21: TPanel;
    MaskEdit7: TMaskEdit;
    DBEdit25: TDBEdit;
    DBEdit24: TDBEdit;
    DBEdit22: TDBEdit;
    EvDBZeroEdit1: TEvDBZeroEdit;
    MaskEdit6: TMaskEdit;
    DBEdit20: TDBEdit;
    Panel23: TPanel;
    Panel24: TPanel;
    DBComboBox1: TDBComboBox;
    Panel26: TPanel;
    Panel27: TPanel;
    Panel10: TPanel;
    Panel11: TPanel;
    Panel12: TPanel;
    DBComboBox3: TDBComboBox;
    Panel14: TPanel;
    Panel22: TPanel;
    Panel25: TPanel;
    DBComboBox5: TDBComboBox;
    Panel28: TPanel;
    DBComboBox6: TDBComboBox;
    MaskEdit8: TMaskEdit;
    DBEdit7: TDBEdit;
    GroupBox1: TGroupBox;
    Edit2: TEdit;
    DBGrid1: TDBGrid;
    DBEdit10: TDBEdit;
    DBMemo1: TDBMemo;
    DBMemo2: TDBMemo;
    Label1: TLabel;
    EvCheckCPF1: TEvCheckCPF;
    DBEDIT11: TDBLookupComboBox;
    UF: TDBEdit;
    MASKEDIT5: TDBEdit;
    Panel: TPanel;
    GroupBox2: TGroupBox;
    ComboBox1: TComboBox;
    procedure FormShow(Sender: TObject);
    procedure SpeedButton5Click(Sender: TObject);
    procedure SpeedButton6Click(Sender: TObject);
    procedure SpeedButton7Click(Sender: TObject);
    procedure SpeedButton8Click(Sender: TObject);
    procedure MaskEdit1Change(Sender: TObject);
    procedure DBEdit9Change(Sender: TObject);
    procedure MaskEdit2Change(Sender: TObject);
    procedure DBEdit12Change(Sender: TObject);
    procedure MaskEdit3Change(Sender: TObject);
    procedure DBEdit13Change(Sender: TObject);
    procedure DBEdit14Change(Sender: TObject);
    procedure MaskEdit4Change(Sender: TObject);
    procedure MaskEdit8Change(Sender: TObject);
    procedure Edit1Change(Sender: TObject);
    procedure MaskEdit5Exit(Sender: TObject);
    procedure MaskEdit4Exit(Sender: TObject);
    procedure MaskEdit6Change(Sender: TObject);
    procedure MaskEdit7Change(Sender: TObject);
    procedure DBEdit24Change(Sender: TObject);
    procedure DBEdit25Change(Sender: TObject);
    procedure MaskEdit1Exit(Sender: TObject);
    procedure MaskEdit2Exit(Sender: TObject);
    procedure MaskEdit3Exit(Sender: TObject);
    procedure MaskEdit6Exit(Sender: TObject);
    procedure MaskEdit7Exit(Sender: TObject);
    procedure BitBtn4Click(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure BitBtn5Click(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure DBEdit10Change(Sender: TObject);
    procedure DBEdit16Exit(Sender: TObject);
    procedure DBMemo2Exit(Sender: TObject);
    procedure BitBtn7Click(Sender: TObject);
    procedure BitBtn6Click(Sender: TObject);
    procedure MaskEdit8Enter(Sender: TObject);
    procedure MaskEdit8Exit(Sender: TObject);
    procedure DBComboBox6Exit(Sender: TObject);
    procedure TabSheet3Enter(Sender: TObject);
    procedure TabSheet1Enter(Sender: TObject);
    procedure TabSheet2Enter(Sender: TObject);
    procedure EvCheckCPF1Error(Sender: TObject);
    procedure DBEDIT11Enter(Sender: TObject);
    procedure TabSheet3Show(Sender: TObject);
    procedure ComboBox1Change(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmFornecedores: TfrmFornecedores;


implementation

uses UnitDM, UnitPrincipal;



{$R *.dfm}


procedure TfrmFornecedores.FormShow(Sender: TObject);
begin
PageControl1.ActivePage := TabSheet1;
Label1.Caption := 'Cadastro de Fornecedores';
DBEdit2.SetFocus;
DM.TFornecedor.Open;
DM.TFornecedor.Edit;
DM.TFornecedor.IndexFieldNames := ('NOMEFORNECEDOR');
DM.QMunicipio.Open;
with DM.QMunicipio do
  	begin
               Close;
               SQL.Clear;
               SQL.Add('Select * from Municipio Order by NOM_MUNIC');
               Open;
    end
end;

procedure TfrmFornecedores.SpeedButton5Click(Sender: TObject);
begin
DM.TFornecedor.First;
DM.TFornecedor.Edit;
end;

procedure TfrmFornecedores.SpeedButton6Click(Sender: TObject);
begin
DM.TFornecedor.Prior;
DM.TFornecedor.Edit;
end;

procedure TfrmFornecedores.SpeedButton7Click(Sender: TObject);
begin
DM.TFornecedor.Next;
DM.TFornecedor.Edit;
end;

procedure TfrmFornecedores.SpeedButton8Click(Sender: TObject);
begin
DM.TFornecedor.Last;
DM.TFornecedor.Edit;
end;

procedure TfrmFornecedores.MaskEdit1Change(Sender: TObject);
begin
DBEdit9.Text := MasKEdit1.Text;
end;

procedure TfrmFornecedores.DBEdit9Change(Sender: TObject);
begin
MaskEdit1.Text := DBEdit9.Text;
end;

procedure TfrmFornecedores.MaskEdit2Change(Sender: TObject);
begin
DBEdit12.Text := MaskEdit2.Text;
end;

procedure TfrmFornecedores.DBEdit12Change(Sender: TObject);
begin
MaskEdit2.Text := DBEdit12.Text; 
end;

procedure TfrmFornecedores.MaskEdit3Change(Sender: TObject);
begin
DBEdit13.Text := MaskEdit3.Text; 
end;

procedure TfrmFornecedores.DBEdit13Change(Sender: TObject);
begin
MaskEdit3.Text := DBEdit13.Text;
end;

procedure TfrmFornecedores.DBEdit14Change(Sender: TObject);
begin
MaskEdit4.Text := DBEdit14.Text; 
end;

procedure TfrmFornecedores.MaskEdit4Change(Sender: TObject);
begin
DBEdit14.Text := MaskEdit4.Text;
end;

procedure TfrmFornecedores.MaskEdit8Change(Sender: TObject);
begin
DBEdit10.Text := MaskEdit8.Text;
end;

procedure TfrmFornecedores.Edit1Change(Sender: TObject);
begin
DM.TFornecedor.Locate('NOMEFORNECEDOR',Edit2.text,[lopartialkey,locaseinsensitive]);
end;

procedure TfrmFornecedores.MaskEdit5Exit(Sender: TObject);
begin
Application.MessageBox('Inscrição Estadual inválida ou digitada incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
end;

procedure TfrmFornecedores.MaskEdit4Exit(Sender: TObject);
begin
Application.MessageBox('CNPJ inválido ou digitado incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
end;

procedure TfrmFornecedores.MaskEdit6Change(Sender: TObject);
begin
DBEdit24.Text := MaskEdit6.Text;  
end;

procedure TfrmFornecedores.MaskEdit7Change(Sender: TObject);
begin
DBEdit25.Text := MaskEdit7.Text;
end;

procedure TfrmFornecedores.DBEdit24Change(Sender: TObject);
begin
MaskEdit6.Text := DBEdit24.Text; 
end;

procedure TfrmFornecedores.DBEdit25Change(Sender: TObject);
begin
MaskEdit7.Text := DBEdit25.Text;
end;

procedure TfrmFornecedores.MaskEdit1Exit(Sender: TObject);
begin
if MaskEdit1.Text = '' then
begin
DBEDIT9.Text :='00000000';
end
else
begin
if length (MaskEdit1.Text) < 8 then
begin
Application.MessageBox('Campo preenchido incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
MaskEdit1.SetFocus;
end
else
exit;
end;
end;

procedure TfrmFornecedores.MaskEdit2Exit(Sender: TObject);
begin
if MaskEdit2.Text = '' then
begin
DBEDIT12.Text :='0000000000';
end
else
begin
if length (MaskEdit2.Text) < 9 then
begin
Application.MessageBox('Campo preenchido incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
MaskEdit2.SetFocus;
end
else
exit;
end;
end;

procedure TfrmFornecedores.MaskEdit3Exit(Sender: TObject);
begin
if MaskEdit3.Text = '' then
begin
DBEDIT13.Text :='0000000000';
end
else
begin
if length (MaskEdit3.Text) < 9 then
begin
Application.MessageBox('Campo preenchido incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
MaskEdit3.SetFocus;
end
else
exit;
end;
end;

procedure TfrmFornecedores.MaskEdit6Exit(Sender: TObject);
begin
if MaskEdit6.Text = '' then
begin
exit;
end
else
begin
if length (MaskEdit6.Text) < 9 then
begin
Application.MessageBox('Campo preenchido incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
MaskEdit6.SetFocus;
end
else
exit;
end;
end;

procedure TfrmFornecedores.MaskEdit7Exit(Sender: TObject);
begin
if MaskEdit7.Text = '' then
begin
exit;
end
else
begin
if length (MaskEdit7.Text) < 9 then
begin
Application.MessageBox('Campo preenchido incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
MaskEdit7.SetFocus;
end
else
exit;
end;
end;

procedure TfrmFornecedores.BitBtn4Click(Sender: TObject);
begin
BitBtn4.Enabled := False;
PageControl1.ActivePage := TabSheet1;
BitBtn5.Enabled := False;
BitBtn6.Enabled := False;
BitBtn3.Enabled := False;
DBEdit2.SetFocus;
DM.TFornecedor.Append;
end;

procedure TfrmFornecedores.BitBtn1Click(Sender: TObject);
begin
         if DBEdit2.Text='' then
   	begin
         Application.MessageBox('Razão Social/Nome deve ser informado!', 'Dados Basicos', mb_Ok + mb_IconInformation);
         PageControl1.ActivePage := TabSheet1;
         DBEdit2.SetFocus;
    end
    else
begin
         if DBEDIT5.Text = '' then
		begin
         Application.MessageBox('Endereço deve ser informado!', 'Dados Basicos', mb_Ok + mb_IconInformation);
         PageControl1.ActivePage := TabSheet1;
         DBEDIT5.SetFocus;
 		end
    else
begin
         if DBEDIT8.Text = '' then
				begin
               Application.MessageBox('Bairro deve ser informado!', 'Dados Basicos', mb_Ok + mb_IconInformation);
               PageControl1.ActivePage := TabSheet1;
               DBEDIT8.SetFocus;
      		end
          else
begin
         if DBEDIT11.Text = '' then
				begin
               Application.MessageBox('Cidade deve ser informada!', 'Dados Basicos', mb_Ok + mb_IconInformation);
               PageControl1.ActivePage := TabSheet1;
               DBEDIT11.SetFocus;
      		end
         else
begin
         if UF.Text = '' then
				begin
               Application.MessageBox('UF deve ser informada!', 'Dados Basicos', mb_Ok + mb_IconInformation);
               PageControl1.ActivePage := TabSheet1;
               UF.SetFocus;
        end
        else
begin
         if MaskEdit1.Text = '' then
				begin
               Application.MessageBox('CEP deve ser informado!', 'Dados Basicos', mb_Ok + mb_IconInformation);
               PageControl1.ActivePage := TabSheet1;
               MaskEdit1.SetFocus;
      		end
         else
begin
         if DBComboBox6.Text = '' then
				begin
               Application.MessageBox('Tipo de Fornecedor deve ser informado!', 'Dados Basicos', mb_Ok + mb_IconInformation);
               PageControl1.ActivePage := TabSheet2;
               DBComboBox6.SetFocus;
        end
        else
begin
         if MaskEdit5.Text = '' then
				begin
               Application.MessageBox('Inscrição Estadual deve ser informada!', 'Dados Basicos', mb_Ok + mb_IconInformation);
               PageControl1.ActivePage := TabSheet2;
               MaskEdit5.SetFocus;
                end
                end;
                end;
                end;
                end;
                end;
                end;
                end;

if (DBEDIT2.Text <> '') and (DBEDIT5.Text <> '')and (DBEdit8.Text <> '') and (DBEdit11.Text <> '') and (UF.Text <> '') and (MaskEdit1.Text <> '') and (DBComboBox6.Text <> '') and (MaskEdit5.Text <> '') then
begin
if MaskEdit4.Text = '' then DBEdit14.Text := '00000000000000';
if MaskEdit8.Text = '' then DBEdit10.Text := '00000000000';
if MaskEdit5.Text = '' then MASKEDIT5.Text := '000000000';
begin
If Application.MessageBox('Confirma Inclusão/Alteração?', 'Confirmação',
mb_YesNo + mb_ICONQUESTION) = idYes then
begin
  try
    DM.TFornecedor.Post;
    DM.TFornecedor.Refresh;
    If Application.MessageBox('Continua Cadastramento?', 'Confirmação',
    mb_YesNo + mb_ICONQUESTION) = idYes then
    begin
    PageControl1.ActivePage := TabSheet1;
    DBEdit2.SetFocus;
    DM.TFornecedor.Append;
    BitBtn4.Enabled := False;
    BitBtn5.Enabled := False;
    BitBtn6.Enabled := False;
    BitBtn3.Enabled := False;
    end
    else
    begin
    PageControl1.ActivePage := TabSheet1;
    DBEdit2.SetFocus;
    BitBtn4.Enabled := true;
    BitBtn5.Enabled := true;
    BitBtn6.Enabled := true;
    BitBtn3.Enabled := true;
    end;
  except
    Application.MessageBox('Inscrição Estadual já cadastrada, Verifique!', 'Fornecedor', mb_Ok + mb_IconExclamation);
  end;
end;
end;
end;
end;

procedure TfrmFornecedores.BitBtn5Click(Sender: TObject);
begin
DM.TFornecedor.Open;
if DM.TFornecedor.RecordCount = 0 then
begin
DM.TFornecedor.Close;
Application.MessageBox('Não hà fornecedores para serem Excluídos!', 'Alteração', mb_Ok + mb_IconInformation);
end;

DM.TFornecedor.Open;
if DM.TFornecedor.RecordCount <> 0 then
begin
If Application.MessageBox('Confirma Exclusão deste Fornecedor?', 'Confirmação',
mb_YesNo + mb_ICONQUESTION) = idYes then
begin
DM.TFornecedor.Delete;
DM.TFornecedor.Refresh;
end;
end;
end;

procedure TfrmFornecedores.BitBtn2Click(Sender: TObject);
begin
DM.TFornecedor.Cancel;
BitBtn4.Enabled := True;
BitBtn5.Enabled := True;
BitBtn6.Enabled := True;
BitBtn3.Enabled := True;
end;

procedure TfrmFornecedores.BitBtn3Click(Sender: TObject);
begin
DM.TFornecedor.Cancel;
DM.TFornecedor.Close;
DM.QMunicipio.Close;
Close;
end;

procedure TfrmFornecedores.DBEdit10Change(Sender: TObject);
begin
MaskEdit8.Text := DBEdit10.Text;
end;

procedure TfrmFornecedores.DBEdit16Exit(Sender: TObject);
begin
PageControl1.ActivePage := TabSheet2;
end;

procedure TfrmFornecedores.DBMemo2Exit(Sender: TObject);
begin
bitbtn1.Click;
end;

procedure TfrmFornecedores.BitBtn7Click(Sender: TObject);
begin
Label1.Caption := 'Cadastro de Fornecedores';
PageControl1.ActivePage := TabSheet1;
BitBtn7.Visible := False;
BitBtn6.Visible := True;
DBEdit2.SetFocus;
end;

procedure TfrmFornecedores.BitBtn6Click(Sender: TObject);
begin
if DM.TFornecedor.RecordCount = 0 then
begin
Application.MessageBox('Não hà Fornecedores cadastrados para execução deste menu!', 'Pesquisa', mb_Ok + mb_IconInformation);
DBEdit2.SetFocus;
end
else
begin
ComboBox1.ItemIndex := 1;
DM.TFornecedor.IndexFieldNames := ('NOMEFORNECEDOR');
DM.TFornecedor.Last;
Panel.Caption := 'Fornecedor(es) Cadastrado(s).: ' + intTostr(DM.TFornecedor.RecordCount);
DM.TFornecedor.First;
Label1.Caption := 'Pesquisa de Fornecedores';
PageControl1.ActivePage := TabSheet3;
Edit2.SetFocus;
BitBtn6.Visible := False;
BitBtn7.Visible := True;
end;
end;


procedure TfrmFornecedores.MaskEdit8Enter(Sender: TObject);
begin
Application.MessageBox('CPF inválido ou digitado incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
end;

procedure TfrmFornecedores.MaskEdit8Exit(Sender: TObject);
begin
Application.MessageBox('CPF inválido ou digitado incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
end;



procedure TfrmFornecedores.DBComboBox6Exit(Sender: TObject);
begin
if DBComboBox6.Text = 'PESSOA JURÍDICA' then
begin
MaskEdit4.Enabled := True;
MaskEdit4.SetFocus;
MaskEdit5.Enabled := True;
MaskEdit8.Clear;
DBEdit7.Clear;
MaskEdit8.Enabled := False;
DBEdit7.Enabled := False;
end
else
begin
MaskEdit4.Clear;
MaskEdit5.Clear;
MaskEdit4.Enabled := False;
MaskEdit5.Enabled := True;
MaskEdit5.SetFocus;
MaskEdit8.Enabled := True;
DBEdit7.Enabled := True;
end;
end;

procedure TfrmFornecedores.TabSheet3Enter(Sender: TObject);
begin
if DM.TFornecedor.RecordCount = 0 then
begin
Application.MessageBox('Não hà Fornecedores cadastrados para execução deste menu!', 'Pesquisa', mb_Ok + mb_IconInformation);
DBEdit2.SetFocus;
end
else
begin
ComboBox1.ItemIndex := 1;
Label1.Caption := 'Pesquisa de Fornecedores';
//PageControl1.ActivePage := TabSheet2;
BitBtn6.Visible := False;
BitBtn7.Visible := True;
Edit2.SetFocus;
end;
end;

procedure TfrmFornecedores.TabSheet1Enter(Sender: TObject);
begin
Label1.Caption := 'Cadastro de Fornecedor';
end;

procedure TfrmFornecedores.TabSheet2Enter(Sender: TObject);
begin
Label1.Caption := 'Inscrição/Contato';
end;

procedure TfrmFornecedores.EvCheckCPF1Error(Sender: TObject);
begin
Application.MessageBox('CPF inválido ou digitado incorretamente, Verefique!', 'Informação', mb_Ok + mb_IconInformation);
end;


procedure TfrmFornecedores.DBEDIT11Enter(Sender: TObject);
begin
DBEdit11.DropDown; 
end;

procedure TfrmFornecedores.TabSheet3Show(Sender: TObject);
begin
DM.TFornecedor.Last;
Panel.Caption := 'Fornecedor(es) Cadastrado(s).: ' + intTostr(DM.TFornecedor.RecordCount);
DM.TFornecedor.First;
end;

procedure TfrmFornecedores.ComboBox1Change(Sender: TObject);
begin
if ComboBox1.ItemIndex = 0 then
begin
DM.TFornecedor.IndexFieldNames := 'CODIGOFORNECEDOR';
end;

begin
if ComboBox1.ItemIndex = 1 then
begin
DM.TFornecedor.IndexFieldNames := 'NOMEFORNECEDOR';
end;

begin
if ComboBox1.ItemIndex = 2 then
begin
DM.TFornecedor.IndexFieldNames := 'NOMEFANTASIA';
end;

begin
if ComboBox1.ItemIndex = 3 then
begin
DM.TFornecedor.IndexFieldNames := 'INSCESTADUAL';
end;
end;
end;
end;
end;


end.
